{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst moviesSlice = createSlice({\n  name: 'movies',\n  initialState: {\n    favorites: [],\n    moviIdList: [],\n    saveListId: []\n  },\n  reducers: {\n    addMoviesToFavorites: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      const movies = state.favorites.find(product => product.imdbID === payload.imdbID);\n      if (movies) return state;\n      state.moviIdList.push(payload.imdbID);\n      state.favorites.push(payload);\n    },\n    removeMoviesFromFavorites: (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      state.favorites = state.favorites.filter(movie => movie.imdbID !== payload);\n    },\n    addToSaveListId: (state, _ref3) => {\n      let {\n        payload\n      } = _ref3;\n      state.saveListId.push(payload);\n    }\n  }\n});\nexport const {\n  addMoviesToFavorites,\n  removeMoviesFromFavorites,\n  addToSaveListId\n} = moviesSlice.actions;\nexport const selectAllFavoriteMovies = state => state.movies.favorites;\nexport const selectAllMoviIdList = state => state.movies.moviIdList;\nexport const selectAllSaveListId = state => state.movies.saveListId;\nexport default moviesSlice.reducer;","map":{"version":3,"names":["createSlice","moviesSlice","name","initialState","favorites","moviIdList","saveListId","reducers","addMoviesToFavorites","state","_ref","payload","movies","find","product","imdbID","push","removeMoviesFromFavorites","_ref2","filter","movie","addToSaveListId","_ref3","actions","selectAllFavoriteMovies","selectAllMoviIdList","selectAllSaveListId","reducer"],"sources":["C:/Users/User - 2/Desktop/alg m4/src/store/movieSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst moviesSlice = createSlice({\n  name: 'movies',\n  initialState: {\n    favorites: [],\n    moviIdList: [],\n    saveListId: []\n  },\n  reducers: {\n    addMoviesToFavorites: (state, { payload }) => {\n      const movies = state.favorites.find(product => product.imdbID === payload.imdbID);\n      if (movies) return state;\n      state.moviIdList.push(payload.imdbID);\n      state.favorites.push(payload);\n    },\n    removeMoviesFromFavorites: (state, { payload }) => {\n      state.favorites = state.favorites.filter((movie) => movie.imdbID !== payload);\n    },\n    addToSaveListId: (state, { payload }) => {\n      state.saveListId.push(payload)\n    }\n  },\n\n})\n\nexport const { addMoviesToFavorites, removeMoviesFromFavorites, addToSaveListId } = moviesSlice.actions;\nexport const selectAllFavoriteMovies = (state) => state.movies.favorites;\nexport const selectAllMoviIdList = (state) => state.movies.moviIdList;\nexport const selectAllSaveListId = (state) => state.movies.saveListId;\nexport default moviesSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,WAAW,GAAGD,WAAW,CAAC;EAC9BE,IAAI,EAAE,QAAQ;EACdC,YAAY,EAAE;IACZC,SAAS,EAAE,EAAE;IACbC,UAAU,EAAE,EAAE;IACdC,UAAU,EAAE;EACd,CAAC;EACDC,QAAQ,EAAE;IACRC,oBAAoB,EAAEA,CAACC,KAAK,EAAAC,IAAA,KAAkB;MAAA,IAAhB;QAAEC;MAAQ,CAAC,GAAAD,IAAA;MACvC,MAAME,MAAM,GAAGH,KAAK,CAACL,SAAS,CAACS,IAAI,CAACC,OAAO,IAAIA,OAAO,CAACC,MAAM,KAAKJ,OAAO,CAACI,MAAM,CAAC;MACjF,IAAIH,MAAM,EAAE,OAAOH,KAAK;MACxBA,KAAK,CAACJ,UAAU,CAACW,IAAI,CAACL,OAAO,CAACI,MAAM,CAAC;MACrCN,KAAK,CAACL,SAAS,CAACY,IAAI,CAACL,OAAO,CAAC;IAC/B,CAAC;IACDM,yBAAyB,EAAEA,CAACR,KAAK,EAAAS,KAAA,KAAkB;MAAA,IAAhB;QAAEP;MAAQ,CAAC,GAAAO,KAAA;MAC5CT,KAAK,CAACL,SAAS,GAAGK,KAAK,CAACL,SAAS,CAACe,MAAM,CAAEC,KAAK,IAAKA,KAAK,CAACL,MAAM,KAAKJ,OAAO,CAAC;IAC/E,CAAC;IACDU,eAAe,EAAEA,CAACZ,KAAK,EAAAa,KAAA,KAAkB;MAAA,IAAhB;QAAEX;MAAQ,CAAC,GAAAW,KAAA;MAClCb,KAAK,CAACH,UAAU,CAACU,IAAI,CAACL,OAAO,CAAC;IAChC;EACF;AAEF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH,oBAAoB;EAAES,yBAAyB;EAAEI;AAAgB,CAAC,GAAGpB,WAAW,CAACsB,OAAO;AACvG,OAAO,MAAMC,uBAAuB,GAAIf,KAAK,IAAKA,KAAK,CAACG,MAAM,CAACR,SAAS;AACxE,OAAO,MAAMqB,mBAAmB,GAAIhB,KAAK,IAAKA,KAAK,CAACG,MAAM,CAACP,UAAU;AACrE,OAAO,MAAMqB,mBAAmB,GAAIjB,KAAK,IAAKA,KAAK,CAACG,MAAM,CAACN,UAAU;AACrE,eAAeL,WAAW,CAAC0B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}